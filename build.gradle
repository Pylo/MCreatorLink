import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "4.0.4"
}

apply plugin: 'net.minecraftforge.gradle'

version = "1.3"
group = "net.mcreator.minecraft.link" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "mcreator_link"

project.tasks.build.dependsOn project.tasks.shadowJar

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: '20201028-1.16.3'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.0.42'

    compile 'com.fazecast:jSerialComm:[2.0.0,3.0.0)'
    shadow 'com.fazecast:jSerialComm:[2.0.0,3.0.0)'
}

shadowJar {
    configurations = [project.configurations.shadow]

    from('.') {
        include 'LICENSE'
        include 'NOTICE'
        into '/'
    }
    from('src/main/resources/META-INF/') {
        include 'jSerialComm-LICENSE'
        include 'jSerialComm-NOTICE'
        into '/'
    }

    baseName = 'net.mcreator.minecraft.link'
    relocate "com.fazecast.jSerialComm", "com.fazecast.jSerialComm"

    exclude "module-info.class"
}

task devJar(type: ShadowJar) {
    dependsOn jar

    configurations = [project.configurations.shadow]

    from sourceSets.main.output
    from sourceSets.main.allJava

    from('.') {
        include 'LICENSE'
        include 'NOTICE'
        into '/'
    }

    from('src/main/resources/META-INF/') {
        include 'jSerialComm-LICENSE'
        include 'jSerialComm-NOTICE'
        into '/'
    }

    baseName = 'net.mcreator.minecraft.link'
    relocate "com.fazecast.jSerialComm", "com.fazecast.jSerialComm"

    exclude "module-info.class"
}

reobf {
    shadowJar {}
}

javadoc {
    source sourceSets.main.allJava
}

task copyModIntoFinalBuild(type: Copy) {
    from('build/libs/')
    include 'net.mcreator.minecraft.link-*-all.jar'
    into('build/export/')
    rename { "MCreator Link " + project.version + " [1.16.5].jar" }
}

task copyDevModIntoFinalBuild(type: Copy) {
    dependsOn devJar

    from('build/libs/')
    include 'net.mcreator.minecraft.link-*.jar'
    into('build/export/')
    rename { "MCreator Link " + project.version + " [1.16.5] - Dev.jar" }
}

task exportArduinoLibrary(type: Zip) {
    archiveName = "MCreator Link " + project.version + " Arduino Library.zip"
    destinationDir = file('build/export/')
    from(files('./arduino'))
}


task exportRaspberryPiLibrary(type: Copy) {
    from('raspberrypi/build/libs/')
    include 'mcreator-link-raspberrypi.jar'
    into('build/export/')
    rename { "mcreator_link_" + project.version + "_pi.jar" }
}

task exportRaspberryPiSetupScript(type: Copy) {
    from('raspberrypi/')
    include 'setup.sh'
    into('build/export/')
    rename { "rpisetup.sh" }
}

task exportJavadoc(type: Copy) {
    from('build/docs/javadoc')
    into('docs/')

    dependsOn javadoc

    group = 'mcreatorlink'
}

task exportAllButDev() {
    group = 'mcreatorlink'

    dependsOn build
    dependsOn copyModIntoFinalBuild
    dependsOn exportArduinoLibrary
    dependsOn ':mcreator-link-raspberrypi:build'
    dependsOn exportRaspberryPiLibrary
    dependsOn exportRaspberryPiSetupScript
}

task exportDev() {
    group = 'mcreatorlink'

    dependsOn devJar
    dependsOn copyDevModIntoFinalBuild
}
buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.github.johnrengelman.shadow'

version = "1.3"
group = "net.mcreator.minecraft.link" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "mcreator_link"

project.tasks.build.dependsOn project.tasks.shadowJar

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.18.2'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

configurations {
    shadowpack
    implementation.extendsFrom(shadowpack)
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.0.1'

    shadowpack 'com.fazecast:jSerialComm:2.7.0'
}

shadowJar {
    configurations = [project.configurations.shadowpack]

    from('.') {
        include 'LICENSE'
        include 'NOTICE'
        into '/'
    }
    from('src/main/resources/META-INF/') {
        include 'jSerialComm-LICENSE'
        include 'jSerialComm-NOTICE'
        into '/'
    }

    exclude "module-info.class"
}

task devJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    dependsOn build

    configurations = [project.configurations.shadowpack]

    from sourceSets.main.output
    from sourceSets.main.allJava

    from('.') {
        include 'LICENSE'
        include 'NOTICE'
        into '/'
    }

    from('src/main/resources/META-INF/') {
        include 'jSerialComm-LICENSE'
        include 'jSerialComm-NOTICE'
        into '/'
    }

    exclude "module-info.class"
}

reobf {
    shadowJar {}
}

javadoc {
    source sourceSets.main.allJava
}

task copyModIntoFinalBuild(type: Copy) {
    project.afterEvaluate {
        dependsOn reobfJar
    }
    dependsOn build

    from('build/libs/')
    include ('mcreator_link-' + version + '-all.jar')
    into('build/export/')
    rename { "MCreator Link " + project.version + " [1.18.2].jar" }
}

task copyDevModIntoFinalBuild(type: Copy) {
    dependsOn devJar

    from('build/libs/')
    include ('mcreator_link-' + version + '.jar')
    into('build/export/')
    rename { "MCreator Link " + project.version + " [1.18.2] - Dev.jar" }
}

task exportArduinoLibrary(type: Zip) {
    archiveName = "MCreator Link " + project.version + " Arduino Library.zip"
    destinationDir = file('build/export/')
    from(files('./arduino'))
}

task exportRaspberryPiLibrary(type: Copy) {
    from('raspberrypi/build/libs/')
    include 'mcreator-link-raspberrypi.jar'
    into('build/export/')
    rename { "mcreator_link_" + project.version + "_pi.jar" }
}

task exportRaspberryPiSetupScript(type: Copy) {
    from('raspberrypi/')
    include 'setup.sh'
    into('build/export/')
    rename { "rpisetup.sh" }
}

task exportJavadoc(type: Copy) {
    from('build/docs/javadoc')
    into('docs/')

    dependsOn javadoc

    group = 'mcreatorlink'
}

task exportAllButDev() {
    group = 'mcreatorlink'

    dependsOn copyModIntoFinalBuild
    dependsOn exportArduinoLibrary
    dependsOn ':mcreator-link-raspberrypi:build'
    dependsOn exportRaspberryPiLibrary
    dependsOn exportRaspberryPiSetupScript
}

task exportDev() {
    group = 'mcreatorlink'

    dependsOn devJar
    dependsOn copyDevModIntoFinalBuild
}
plugins {
    id 'java-library'
    id 'net.neoforged.gradle.userdev' version '7.0.94'
}

version = "1.3"
group = "net.mcreator.minecraft.link" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
base.archivesName = "mcreator_link"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

jarJar.enable()

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main

        dependencies {
            runtime 'com.fazecast:jSerialComm:2.7.0'
        }
    }

    client {}
    server {}
}

dependencies {
    implementation 'net.neoforged:neoforge:20.4.171'

    implementation 'com.fazecast:jSerialComm:2.7.0'

    jarJar(group: 'com.fazecast', name: 'jSerialComm', version: '[2.7,2.8)') {
        jarJar.pin(it, '2.7.0')
    }
}

javadoc {
    source sourceSets.main.allJava
}

tasks.register('copyModIntoFinalBuild', Copy) {
    from('build/libs/')
    include('mcreator_link-' + version + '-all.jar')
    into('build/export/')
    rename { "MCreator Link " + project.version + " [1.20.4].jar" }
}

tasks.named('copyModIntoFinalBuild').configure { dependsOn('jarJar') }

tasks.register('exportArduinoLibrary', Zip) {
    archiveFileName = "MCreator Link " + project.version + " Arduino Library.zip"
    destinationDirectory = file('build/export/')
    from(files('./arduino'))
}

tasks.register('exportJavadoc', Copy) {
    from('build/docs/javadoc')
    into('docs/')

    dependsOn javadoc

    group = 'mcreatorlink'
}

tasks.register('exportAll') {
    group = 'mcreatorlink'

    dependsOn copyModIntoFinalBuild
    dependsOn exportArduinoLibrary
}